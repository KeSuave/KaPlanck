import{u as r,j as e}from"./index-CLzoCpN7.js";const s={title:"KaPlanck",description:"undefined"};function t(n){const a={a:"a",div:"div",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...r(),...n.components};return e.jsxs(e.Fragment,{children:[e.jsx(a.header,{children:e.jsxs(a.h1,{id:"kaplanck",children:["KaPlanck",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#kaplanck",children:e.jsx(a.div,{"data-autolink-icon":!0})})]})}),`
`,e.jsxs(a.p,{children:["KaPlanck is a KAPLAY plugin that integrates ",e.jsx(a.a,{href:"https://piqnt.com/planck.js",children:"PlanckJS"}),", while keeping the simple/fun API of ",e.jsx(a.a,{href:"https://kaplayjs.com/",children:"KAPLAY"}),"."]}),`
`,e.jsxs(a.h2,{id:"planckjs",children:["PlanckJS",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#planckjs",children:e.jsx(a.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(a.p,{children:["Planck.js is JavaScript/TypeScript rewrite of the ",e.jsx(a.a,{href:"https://box2d.org/",children:"Box2D"})," C++ physics engine for cross-platform game development."]}),`
`,e.jsxs(a.h2,{id:"kaplay",children:["KAPLAY",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#kaplay",children:e.jsx(a.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(a.p,{children:"KAPLAY (/ˈkæpleɪ/) is a JavaScript and TypeScript game library that makes it easy to create games for the web. It's free, open-source and fun."}),`
`,e.jsxs(a.h3,{id:"before-you-start",children:["Before You Start",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#before-you-start",children:e.jsx(a.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(a.p,{children:["Please read both ",e.jsx(a.a,{href:"https://piqnt.com/planck.js",children:"PlanckJS'"})," and ",e.jsx(a.a,{href:"https://kaplayjs.com/",children:"KAPLAY's"}),` documentation. Understanding how each of the libraries
work is crucial to effectively use KaPlanck. Once you have a good grasp on both libraries, you can proceed to `,e.jsx(a.a,{href:"/getting-started",children:"Getting Started"}),"."]})]})}function c(n={}){const{wrapper:a}={...r(),...n.components};return a?e.jsx(a,{...n,children:e.jsx(t,{...n})}):t(n)}export{c as default,s as frontmatter};
